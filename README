
        		 MPICH2 Early Release

This tarball contains an early release of MPICH2.  It has been
tested by us in our own environment, but not extensively tested
by outside users (This is where you come in!).  Depending
on your system, it may not even compile.  If you are interested in
what the next generation of MPICH will look like, or for helping us
harden this version for wider distribution, this tarball is for
you.  If you are looking for an implementation of MPI for use in
building and running your favorite application(s), please obtain the
MPICH 1.2.X distribution from http://www.mcs.anl.gov/mpi/mpich.

If you have difficulties with this release of MPICH2, please send
mail to mpich2-maint@mcs.anl.gov.

Currently the only communication layer fully supported in MPICH2 is the
"TCP channel device", although others are in preparation, as you can see
from the code here.

To build MPICH2 with the TCP channel device, do the following:

    tar xzf mpich2.tar.gz
    cd mpich2-<SNAPSHOT_DATE>
    ./configure
    make

(If your tar does not support the z option, use

   gunzip -c mpich2.tar.gz | tar xf -

for the first line).  (VPATH builds are supported as well; see below).

You should now have a complete build of MPICH2, and the executable
commands needed to start MPI processes are in mpich2-<DATE>/bin.  You should
add that directory to your PATH.

If you wish to install MPICH2 in a directory other than the one you
build it in, you should build MPICH2 as follows.

    ./configure --prefix=<INSTALL_DIR>
    make
    make install

Then the necessary executables will be in <INSTALL_DIR>/bin, and you
should add it to your PATH.

Example and test programs (both source and executables) can be found
in ./examples and ./test/mpi/basic, respectively.  To run any of these
programs, you will need to start the MPD process management daemon.
More on MPD can be found in mpich2/src/pm/mpd/README.  An important
prerequisite is that you need to have Python 2.2 installed.

   touch ~/.mpd.conf
   chmod 600 ~/.mpd.conf
   echo "password=<YOUR_MPD_PASSWORD_HERE>" >>~/.mpd.conf
   ./bin/mpd &

The password should *not* be the same as any other password that you use;
this password is used exclusively within the MPD system.

Should you wish to setup a MPD ring across multiple machines, more
advanced instructions for MPD can be found in mpich2/src/pm/mpd/README.

Once you have MPD running, you may run the hello world program as
follows.

    cd examples
    mpiexec -n 2 hellow

To shut MPD down, run

    mpdallexit

What compiles but doesn't work
------------------------------
We don't guarantee that *anything* works yet.  However, we have run MPICH2 
against both the MPICH-1 test suite and an updated and correct version of the 
Intel test suite.  MPICH2 passes most of these tests, including most error 
handling.  Tests that do not yet pass include cancelling sends.
Among the routines that compile but that are known not to work yet are:

MPI_Cancel for sends, persistent requests
MPI_Get_elements for partial types


Other known issues:
The various free routines do not yet free all internal objects, so memory
leaks are certain.  However, most MPI programs should not have any problems.

Testing Status
--------------
We are beginning to run regular tests of the MPI-1 functions.  We are 
using both the MPICH-1 test suite and the Intel test suite (with corrections).
The current status is available at 
http://www.mcs.anl.gov/mpi/mpich/micronotes/mpich2-tests .

VPATH Builds
------------
MPICH2 supports building MPICH in a different directory tree than the one
where the MPICH2 source is installed.  This often allows faster building, as
the sources can be placed in a shared filesystem and the builds done in a
local (and hence usually much faster) filesystem.  To make this clear,
the following example assumes that the sources are placed in 
/usr/me/mpich2-10-25-02, the build is done in /tmp/me/mpich2, and the 
installed version goes into /usr/local/mpich2-test:

    cd /usr/me
    tar xzf mpich2-devsnapshot.tar.gz
    cd /tmp/me
    # Assume /tmp/me already exists
    mkdir mpich2
    cd mpich2
    /usr/me/mpich2-10-25-02/configure --prefix=/usr/local/mpich2-test
    make
    make install
