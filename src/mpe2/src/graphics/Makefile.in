ALL: all

MAKE   = @MAKE@
SHELL  = /bin/sh
MKDIR  = @MKDIR@
RM     = @RM@
CP     = @CPRP@

top_srcdir        = @top_srcdir@
srcdir            = @srcdir@

# Build directories
includebuild_dir  = @includebuild_dir@
libbuild_dir      = @libbuild_dir@
binbuild_dir      = @binbuild_dir@
sbinbuild_dir     = @sbinbuild_dir@

# Building Fortran to C interface
MPE_BUILD_FORTRAN2C  = @MPE_BUILD_FORTRAN2C@
# MPI implementation: used to turn on/off of certain feature
MPI_IMPL             = @MPI_IMPL@
# MPE header files that are needed by endusers
MPE_HEADERS          = mpe_graphics.h mpe_graphicsf.h

# Assumption: This Makefile won't be created if X is not available
all: build_include build_lib_bin linktest_all

#######  Building from the source
build_include:
	@-if [ -n "$(includebuild_dir)" ] ; then \
	      if [ ! -d $(includebuild_dir) ] ; then \
	          $(MKDIR) -p $(includebuild_dir) ; \
	      fi ; \
	      cd $(top_srcdir)/include ; \
	      for file in $(MPE_HEADERS) ; do \
	          if [ -f $$file ] ; then \
	              $(CP) -f $$file $(includebuild_dir) ; \
	          fi ; \
	      done ; \
	  fi

build_lib_bin:
	@( cd src && $(MAKE) )

########  Linkage Tests
linktest_all: linktest_C linktest_F77

linktest_C:
	@if [ "$(MPI_IMPL)" != "MPICH" -a "$(MPI_IMPL)" != "MPICH2" ] ; then \
	     ( cd contrib/test && $(MAKE) linktest_C ) ; \
	 fi

linktest_F77:
	@if [ "$(MPE_BUILD_FORTRAN2C)" = "yes" ] ; then \
	     if [    "$(MPI_IMPL)" != "MPICH" \
	          -a "$(MPI_IMPL)" != "MPICH2" ] ; then \
	         ( cd contrib/test && $(MAKE) linktest_F77 ) ; \
	     fi ; \
         fi
	@echo

########  Cleaning
clean_include:
	@-if [ -n "$(includebuild_dir)" \
	       -a "$(includebuild_dir)" != "$(top_srcdir)/include" ] ; then \
	      cd $(includebuild_dir) ; \
	      for file in $(MPE_HEADERS) ; do \
	          $(RM) -f $$file ; \
	      done ; \
	  fi

clean_lib:

clean_bin:

clean: clean_bin clean_lib
	@( cd src && $(MAKE) clean )

realclean: clean_include clean
