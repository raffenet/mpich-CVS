smvar_do_dependencies = ignore
smvar_do_sharedlibs   = 0

MOD              = @F90MODEXT@
MPIMOD           = @MPIMODNAME@
F90INCFLAG       = @F90INCFLAG@
F90_COMPILE_MODS = $(F90_COMPILE) $(F90INCFLAG)../f77
INCLUDES = -I../../include -I${master_top_srcdir}/src/include

lib${MPILIBNAME}f90_a_SOURCES = mpi.o
all-preamble: $(MPIMOD).$(MOD)

# Thes copy line in this step makes the F90 modules available to 
# the mpif90 script before an install takes place
# The if handles the Intel F90 compiler, which has an unusual interface
# (The mpimod.pcl file should contain only a local mpimod.pc name; if
# it contains a file name in another directory and that file does not 
# exist, the compiler may refuse to compile the file)
$(MPIMOD).$(MOD): $(srcdir)/mpi.f90
	@if [ -n "@F90_WORK_FILES_ARG@" ] ; then \
	    rm -f mpimod.pc mpimod.pcl ; \
	    echo "mpimod.pc" > mpimod.pcl ; \
	    $(F90_COMPILE_MODS) @F90_WORK_FILES_ARG@ -c $(srcdir)/mpi.f90 ; \
	    cp mpimod.pc ../../../src/include/mpimod.pc ; \
	    cp mpimod.pcl ../../../src/include/mpimod.pcl ; \
	else \
	    $(F90_COMPILE_MODS) -c $(srcdir)/mpi.f90 ; \
	fi

# To ensure that f90 can be used before a make-install step, we copy
# the library to the build directory (just like we do with the module files)
all-postamble:
	if [ -s lib${MPILIBNAME}f90.a ] ; then \
	   cp -p lib${MPILIBNAME}f90.a ../../../lib ; fi

clean-local:
	rm -f *.$(MOD)

install_BIN     = mpif90
install_ETC     = mpif90.conf
install_INCLUDE = $(MPIMOD).$(MOD)
optinstall_INCLUDE = mpimod.pcl mpimod.pc
install_LIB     = lib${MPILIBNAME}f90.a

# Documentation sources
doc_sources = mpif90.txt manf90.txt
DOCDESTDIRS = html:www/www1,man:man/man1,latex:doc/refman
doc_HTML_SOURCES  = ${doc_sources}
doc_MAN_SOURCES   = ${doc_sources}
doc_LATEX_SOURCES = ${doc_sources}

distclean-local:
	rm -f ../../../bin/mpif90
	rm -f ../../../src/include/$(MPIMOD).$(MOD)
	rm -f ../../../lib/lib${MPILIBNAME}f90.a
