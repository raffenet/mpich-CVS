dnl Process this file with autoconf to produce a configure script.
# Autoconf initialization:
AC_INIT(mpdroot.h)
AC_PREREQ(2.13)                 dnl needed for SHELL
# Autoconf header:
rm -f ${srcdir}/mpdconf.h mpdconf.h
AC_CONFIG_HEADER(mpdconf.h)

dnl Process configure arguments
AC_ARG_ENABLE(echo,
   [--enable-echo - turn on echoing from within configure script],
   set -x)
CONFIGURE_ARGS="$*"
if test -n "$CONFIGURE_ARGS" ; then 
    echo "Configuring with args $CONFIGURE_ARGS"
fi
AC_SUBST(COPTIONS)
dnl add --enable-strict and --enable-g

AC_ARG_ENABLE(g, [--enable-g  - turn on debugging flags ] )
if test "$enable_g" = "yes" -o "$enable_g" = "all" ; then
    COPTIONS="${COPTIONS} -g"
fi

dnl Checks for programs.
dnl Determine the executable and object file extensions.  These
dnl are needed for some operations under cygwin
AC_EXEEXT
AC_OBJEXT
# Checking for programs.
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_LN_S

AC_CHECK_PROG(PY23, python2.3, python2.3)
AC_CHECK_PROG(PY2,  python2, python2)
AC_CHECK_PROG(PY22, python2.2, python2.2)
AC_CHECK_PROG(PY,   python, python)
dnl Find a usable Python
PYTHON=""
for pypgm in $PY23 $PY2 $PY22 $PY ; do \
    AC_MSG_CHECKING([that $pypgm is a valid python version])
    changequote(,)dnl
    py_version=`$pypgm -c "import sys;print sys.version_info[0]"`
    py_subversion=`$pypgm -c "import sys;print sys.version_info[1]"`
    changequote([,])dnl
    if test "$py_version" -gt "2" -o "$py_version" -ge "2" -a "$py_subversion" -ge "2" ; then
        AC_MSG_RESULT(yes)
    else
        AC_MSG_RESULT(no)
	continue
    fi	       
    
    AC_MSG_CHECKING([that the cPickle module is available for $pypgm])
    if $pypgm -c 'from cPickle import dumps'  >/dev/null 2>&1 ; then
        AC_MSG_RESULT(yes)
    else
        AC_MSG_RESULT(no)
	continue
    fi
    
    AC_MSG_CHECKING([that the xml minidom module is available for $pypgm])
    if $pypgm -c 'from xml.dom.minidom import parseString'  >/dev/null 2>&1 ; then
        AC_MSG_RESULT(yes)
    else
        AC_MSG_RESULT(no)
	continue
    fi
    PYTHON="$pypgm"
    echo END LOOP
    break
done
#
if test -z "$PYTHON" ; then
    AC_MSG_ERROR([Python required (version 2.2 or greater, with necessary modules)]) 
fi

# echo "RMB PYTHON=" $PYTHON
AC_SUBST(PYTHON)

# In case clinker is not defined
if test -z "$CLINKER" ; then 
    CLINKER="$CC"
    AC_SUBST(CLINKER)
fi

dnl Checks for libraries.
# Searching libraries instead of checking
AC_SEARCH_LIBS(socket, socket)

dnl Checks for header files.
# Checking headers
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h strings.h sys/time.h unistd.h stdlib.h)

dnl Checks for library functions.
# Checking library functions
AC_CHECK_FUNCS(putenv socket)

dnl Output:
# Starting output
MPD_HOME=`pwd`
AC_SUBST(MPD_HOME)
dnl
dnl Dependency handling
AC_SUBST(MAKE_DEPEND_C)
# AC_OUTPUT_COMMANDS(chmod +x startdaemons)
AC_OUTPUT(Makefile)
