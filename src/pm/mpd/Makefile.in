# Makefile.in for mpd2

@SET_MAKE@
prefix    = @prefix@
exec_prefix = @exec_prefix@
bindir    = @bindir@
srcdir	  = @srcdir@
SHELL	  = @SHELL@
CC	  = @CC@
INCLUDES  = -I. -I${srcdir}
CPPFLAGS  = @CPPFLAGS@
CLINKER	  = @CLINKER@
COPTIONS  = @COPTIONS@
LDFLAGS	  = @LDFLAGS@
LIBS	  = @LIBS@ 
GDB       = @GDB@

C_COMPILE = ${CC} ${INCLUDES} ${CFLAGS} ${COPTIONS}
C_LINK	  = ${CLINKER} ${CFLAGS} ${COPTIONS} ${LDFLAGS}

VPATH     = .:@srcdir@

PROGRAMS  = mpdroot
EXAMPLES  = sigcatcher infloop

SOURCES   = ${mpdroot_SOURCES} ${example_SOURCES}
OBJECTS   = ${mpdroot_OBJECTS} ${example_OBJECTS}
HEADERS   = mpdconf.h mpdroot.h

CMDS_ROOT     =  mpiexec mpdrun mpdtrace mpdringtest mpdlistjobs mpdkilljob mpdsigjob
CMDS_NO_ROOT  =  mpdallexit mpdcleanup mpdhelp mpdboot mpd
PYTHON_SOURCE =  mpiexec.py mpdrun.py mpdtrace.py mpdringtest.py mpdlistjobs.py mpdkilljob.py \
                 mpdsigjob.py mpdallexit.py mpdcleanup.py mpdhelp.py mpdboot.py \
		 mpd.py mpdman.py mpdlib.py

mpdroot_SOURCES  = mpdroot.c
example_SOURCES	 = sigcatcher.c infloop.c

mpdroot_OBJECTS	= ${mpdroot_SOURCES:.c=.o}
example_OBJECTS	= ${example_SOURCES:.c=.o}


all: Makefile ${PROGRAMS}


.SUFFIXES:
.SUFFIXES: .o .dep .c 

etags:  ${HEADERS} ${SOURCES}
	etags ${HEADERS} ${SOURCES}

mpdroot: ${mpdroot_OBJECTS}
	$(C_LINK) -o mpdroot ${mpdroot_OBJECTS} $(LIBS)

mpdroot.o: ${srcdir}/mpdroot.c ${srcdir}/mpdroot.h mpdconf.h
	${C_COMPILE} -c -DBINDIR=\"${bindir}/\" $< 

# The following lines provide the right libraries for all example programs
.c:
	${C_LINK} -o $* $*.c $(LIBS)
.o:     
	$(C_LINK) -o $* $*.o $(LIBS)

clean: 
	@-/bin/rm -f *.o *.dep *~ ${EXAMPLES} core*

# echo "some of the following might be executables you want to remove"
# ls -l | grep rwx
distclean: clean
	/bin/rm -f Makefile mpdconf.h ${PROGRAMS} ${CMDS_ROOT} ${CMDS_NO_ROOT} \
                   config.status config.cache config.log


maintainer-clean: distclean
	/bin/rm -f configure mpdconf.h.in

configure: configure.in
	./makeconfigure

Makefile: ${srcdir}/Makefile.in config.status
	./config.status

.c.o:	
	${C_COMPILE} -c $<

install:
	@if [ ! -d ${bindir} ] ; then \
	    echo "mkdir -p ${bindir} " ;\
	    mkdir -p ${bindir} ;\
	fi   
	cp -f mpdroot ${bindir}/mpdroot
	@if [ "`whoami`" = "root" ] ; then \
	    echo "chmod 4755 ${bindir}/mpdroot" ;\
	    chmod 4755 ${bindir}/mpdroot ;\
	fi
	@echo "copying python files/links into " ${bindir}
	-@for cmd in ${CMDS_ROOT} ; do \
	    cp -f ${srcdir}/$$cmd.py ${bindir}/$$cmd.py ; \
	    ( rm -f ${bindir}/$$cmd >/dev/null 2>&1 || exit 0 ) ; \
	    ( cd ${bindir} && @LN_S@ -f mpdroot $$cmd ; ) \
	done
	-@for cmd in ${CMDS_NO_ROOT} ; do \
	    cp -f ${srcdir}/$$cmd.py ${bindir}/$$cmd ; \
	    chmod 755 ${bindir}/$$cmd; \
	done
	-@cp -f ${srcdir}/mpdman.py ${bindir}/mpdman.py
	-@chmod 755 ${bindir}/mpdman.py
	-@cp -f ${srcdir}/mpdlib.py ${bindir}/mpdlib.py
	-@chmod 755 ${bindir}/mpdlib.py
	-@( rm -f ${bindir}/mpirun >/dev/null 2>&1 || exit 0 )
	-@cd ${bindir} && @LN_S@ -f mpdrun mpirun


mpich2-build-install: mpich2-mpdroot install
	/bin/cp -f mpich2-mpdroot ${bindir}/mpdroot
	@if [ "`whoami`" = "root" ] ; then \
	    echo "chmod 4755 ${bindir}/mpdroot" ;\
	    chmod 4755 ${bindir}/mpdroot ;\
	fi
	/bin/rm -f mpich2-mpdroot

mpich2-mpdroot: mpich2-mpdroot.o
	$(C_LINK) -o mpich2-mpdroot mpich2-mpdroot.o $(LIBS)
	/bin/rm -f mpich2-mpdroot.o

mpich2-mpdroot.o: ${srcdir}/mpdroot.c ${srcdir}/mpdroot.h mpdconf.h
	/bin/cp ${srcdir}/mpdroot.c mpich2-mpdroot.c
	${C_COMPILE} -c -DBINDIR=\"${bindir}/\" mpich2-mpdroot.c
	/bin/rm -f mpich2-mpdroot.c

