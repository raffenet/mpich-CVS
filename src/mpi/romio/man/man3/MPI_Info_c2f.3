.TH MPI_Info_c2f 3 "1/9/1998" " " "MPI-2"
.SH NAME
MPI_Info_c2f \-  Translates a C info handle to a Fortran info handle 
.SH SYNOPSIS
.nf
#include "mpio.h"
MPI_Fint MPI_Info_c2f(MPI_Info info)
.fi
.SH INPUT PARAMETERS
.PD 0
.TP
.B info 
- C info handle (integer)
.PD 1

.SH RETURN VALUE
.PD 0
.TP
.B Fortran info handle (handle)
- @*/
.PD 1
MPI_Fint MPI_Info_c2f(MPI_Info info)
{
int i;

#ifndef __INT_LT_POINTER
return (MPI_Fint) info;
#else
if ((info <= (MPI_Info) 0) || (info->cookie != MPIR_INFO_COOKIE))
return MPI_INFO_NULL;
if (!MPIR_Infotable) {
MPIR_Infotable_max = 1024;
MPIR_Infotable = (MPI_Info *)
ADIOI_Malloc(MPIR_Infotable_max*sizeof(MPI_Info));
MPIR_Infotable_ptr = 0;  /* 0 can't be used though, because
MPI_INFO_NULL=0 */
for (i=0; i<MPIR_Infotable_max; i++) MPIR_Infotable[i] = MPI_INFO_NULL;
}
if (MPIR_Infotable_ptr == MPIR_Infotable_max-1) {
MPIR_Infotable = (MPI_Info *) ADIOI_Realloc(MPIR_Infotable,
(MPIR_Infotable_max+1024)*sizeof(MPI_Info));
for (i=MPIR_Infotable_max; i<MPIR_Infotable_max+1024; i++)
MPIR_Infotable[i] = MPI_INFO_NULL;
MPIR_Infotable_max += 1024;
}
MPIR_Infotable_ptr++;
MPIR_Infotable[MPIR_Infotable_ptr] = info;
return (MPI_Fint) MPIR_Infotable_ptr;
#endif
}
