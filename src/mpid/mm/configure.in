AC_INIT(configure.in)
AC_CONFIG_AUX_DIR(../../../confdb)
dnl
dnl Definitions will be placed in this file rather than in the DEFS variable
AC_CONFIG_HEADER(include/mpidconf.h)
dnl
echo "RUNNING CONFIGURE FOR THE MultiMethod DEVICE"
dnl
dnl
PAC_ARG_CACHING
dnl
AC_ARG_WITH(bsocket,
[--with-bsocket - Control the use of the bsocket library],,with_bsocket=yes)
dnl
AC_ARG_WITH(sock_type,
[--with-sock_type=name - Specify the socket type,  poll or iocp.],,
with_sock_type=poll)

dnl
case "$with_bsocket" in 
     no|none)
     AC_DEFINE(NO_BSOCKET,,[Define to use native sockets instead])
     ;;
     yes)
     ;;
     *)
     AC_MSG_WARN([Unknown value $with_bsocket for --with-bsocket])
     ;;
esac
dnl
dnl case "$with_sock_type" in
dnl      poll)
dnl      AC_DEFINE(WITH_SOCK_TYPE
dnl ...
dnl esac
dnl
dnl Setup other replaceable values
dnl
dnl Extract the methods
dnl if test "$with_device" = "default" ; then
dnl     with_device="mm:shm,tcp"
dnl fi
if test "$with_device" = "mm" ; then with_device="mm:shm,tcp,sock" ; fi
method_subdirs=`echo $with_device | sed -e 's/mm://' | sed -e 's/,/ /g'`
if test "$method_subdirs" = "" ; then method_subdirs="shm tcp sock" ; fi
AC_SUBST(method_subdirs)
ib_method_yes_no="no"
for method in $method_subdirs ; do
    if test "$method" = "sock" ; then 
       AC_DEFINE(WITH_METHOD_SOCKET, 1, [socket method enabled])
       echo socket method enabled.
    fi
    if test "$method" = "tcp" ; then 
       AC_DEFINE(WITH_METHOD_TCP, 1, [tcp method enabled])
       echo tcp method enabled.
    fi
    if test "$method" = "shm" ; then 
       AC_DEFINE(WITH_METHOD_SHM, 1, [shared memory method enabled]) 
       echo shm method enabled
    fi
    if test "$method" = "via" ; then 
       AC_DEFINE(WITH_METHOD_VIA, 1, [via method enabled])
       echo via method enabled 
    fi
    if test "$method" = "via_rdma" ; then 
       AC_DEFINE(WITH_METHOD_VIA_RDMA, 1, [via rdma method enabled])
       echo via rdma method enabled 
    fi
    if test "$method" = "ib" ; then
       ib_method_yes_no="yes"
       AC_DEFINE(WITH_METHOD_IB, 1, [infiniband method enabled])
       CPPFLAGS="$CPPFLAGS -I/usr/local/PSC1200/include -DLINUX -DNORCSID"
       LDFLAGS="$LDFLAGS -L/usr/local/PSC1200/lib -Xlinker -t"
       LIBS="$LIBS /usr/local/PSC1200/lib/libibos.so -ldl -lpthread"
       echo infiniband method enabled
    fi
done
dnl AC_SUBST(ib_method_yes_no)
dnl
dnl Choose the socket type
dnl
if test "$with_sock_type" = "poll" ; then
AC_DEFINE(WITH_SOCK_TYPE, SOCK_POLL, [sock_type = poll])
echo socket type = poll
fi
dnl if test "$with_sock_type" = "iocp" ; then
dnl AC_DEFINE(WITH_SOCK_TYPE_IOCP, 1, [sock_type = iocp])
dnl echo socket type = iocp
dnl fi
dnl
dnl
if test -z "$top_srcdir" ; then
   use_top_srcdir=$srcdir
else
   use_top_srcdir=$top_srcdir
fi
if test -z "$master_top_srcdir" ; then
   master_top_srcdir=$use_top_srcdir
fi
AC_SUBST(master_top_srcdir)
export master_top_srcdir

AC_PROG_CC
AC_PATH_PROG(AR,ar)
AC_PATH_PROG(RANLIB,ranlib)
PAC_PROG_MAKE
AC_C_CONST
PAC_C_VOLATILE
PAC_C_RESTRICT
AC_C_INLINE
AC_HEADER_STDC
MPILIBNAME=mpich
AC_SUBST(MPILIBNAME)

AC_SEARCH_LIBS(socket, socket)
AC_CHECK_LIB(thread, mutex_init)
AC_CHECK_HEADERS(pthread.h fcntl.h string.h strings.h sys/time.h sys/sem.h sys/ipc.h sys/shm.h unistd.h sys/param.h sys/ioctl.h netinet/in.h netinet/tcp.h netdb.h sys/uio.h sys/select.h sys/types.h stdlib.h sys/socket.h sys/filio.h netinet/in.h values.h sys/uio.h sched.h arpa/inet.h sys/sockio.h net/if.h)
AC_CHECK_HEADERS(sys/stat.h sys/ptrace.h sys/wait.h errno.h ctype.h)
AC_CHECK_FUNCS(yield mutex_init shmget shmat shmdt shmctl usleep sleep getcwd gethostname gettimeofday putenv select socket sched_yield)
AC_CHECK_FUNCS(pthread_mutexattr_setpshared pthread_mutexattr_init)

dnl Generate the Makefiles from Makefile.in

AC_OUTPUT(Makefile \
 src/Makefile \
 src/bsocket/Makefile \
 src/common/Makefile \
 src/init/Makefile \
 src/mm/Makefile \
 src/progress/Makefile \
 src/pt2pt/Makefile \
 src/request/Makefile \
 src/spawn/Makefile \
 src/util/Makefile \
 src/xfer/Makefile \
 src/sock/Makefile \
 src/ib/Makefile \
 src/tcp/Makefile \
 src/via/Makefile \
 src/shm/Makefile \
 src/viardma/Makefile \
 src/packer/Makefile \
 src/unpacker/Makefile \
)
