AC_PREREQ(2.59)
AC_INIT(configure.in)

dnl
dnl Set the directory that contains support scripts such as install-sh and
dnl config.guess
dnl
AC_CONFIG_AUX_DIR(../../../../../confdb)

dnl
dnl Definitions will be placed in this file rather than in the DEFS variable
dnl
AC_CONFIG_HEADER(include/mpidi_ch3i_nemesis_conf.h)

echo "RUNNING CONFIGURE FOR THE NEMESIS CHANNEL"
dnl
dnl First check that we have a clean build if we are doing a VPATH build
if test "`cd $srcdir && pwd`" != "`pwd`" && test -f $srcdir/config.status ; then
    AC_MSG_ERROR([You cannot do a VPATH build if the source directory has been
    configured.  Run "make distclean" in $srcdir first.])
fi

AC_ARG_ENABLE(fast,
[--enable-fast - pick the appropriate options for fast execution.  This
                turns off error checking and timing collection],,
enable_fast=no)
if test "$enable_fast" = "yes" ; then
    AC_DEFINE(ENABLE_NO_SCHED_YIELD,1,[Define to remove sched_yield()s in polling loops])
fi

AC_ARG_WITH(gm, [--with-gm=path - specify path where gm include directory and lib directory can be found],
if test "${with_gm}" != "yes" -a "${with_gm}" != "no" ; then
    LDFLAGS="$LDFLAGS -L${with_gm}/lib"
    CPPFLAGS="$CPPFLAGS -I${with_gm}/include"
fi,)
AC_ARG_WITH(gm-include, [--with-gm-include=path - specify path to gm include directory],
if test "${with_gm_include}" != "yes" -a "${with_gm_include}" != "no" ; then
    CPPFLAGS="$CPPFLAGS -I${with_gm_include}"
fi,)
AC_ARG_WITH(gm-lib, [--with-gm-lib=path - specify path to gm lib directory],
if test "${with_gm_lib}" != "yes" -a "${with_gm_lib}" != "no" ; then
    LDFLAGS="$LDFLAGS -L${with_gm_lib}"
fi,)

if test "${nemesis_network}" == "gm" ; then
dnl     if test -n "$gm_dir" ; then
dnl 	LDFLAGS="$LDFLAGS -L${gm_dir}/lib"
dnl 	CPPFLAGS="$CPPFLAGS -I${gm_dir}/include"
dnl     fi
dnl     if test -n "$gm_include_dir" ; then
dnl 	CPPFLAGS="$CPPFLAGS -I${gm_include_dir}"
dnl     fi
dnl     if test -n "$gm_lib_dir" ; then
dnl 	LDFLAGS="$LDFLAGS -L${gm_lib_dir}"
dnl     fi
    AC_CHECK_HEADER([gm.h], , [AC_MSG_ERROR(['gm.h not found.  Did you specify --with-gm= or --with-gm-include=?'])])
    AC_CHECK_LIB(gm, gm_init, , [AC_MSG_ERROR(['gm library not found.  Did you specify --with-gm= or --with-gm-lib=?'])])
fi

case "${nemesis_network}" in
     gm )
          AC_DEFINE(MPID_NEM_NET_MODULE, MPID_NEM_GM_MODULE, [Choose gm, tcp, or no network]) ;;
     tcp )
          AC_DEFINE(MPID_NEM_NET_MODULE, MPID_NEM_TCP_MODULE, [Choose gm, tcp, or no network]) ;;
     * )
          AC_DEFINE(MPID_NEM_NET_MODULE, MPID_NEM_NO_MODULE, [Choose gm, tcp, or no network]) ;;
esac

AC_ARG_WITH(papi, [--with-papi[=path] - specify path where papi include and lib directories can be found],, with_papi=no)

if test "${with_papi}" != "no" ; then
    if test "${with_papi}" != "yes" ; then
        CPPFLAGS="$CPPFLAGS -I${with_papi}/include"
#	LDFLAGS="$LDFLAGS -L${with_papi}/lib"
	LIBS="${with_papi}/lib/libpapi.a $LIBS"
	LIBS="${with_papi}/lib/libperfctr.a $LIBS"
    fi

    AC_CHECK_HEADER([papi.h], , [AC_MSG_ERROR(['papi.h not found in ${with_papi}.  Did you specify the path with --with-papi=?'])])

    AC_RUN_IFELSE([AC_LANG_PROGRAM([[#include <papi.h>]],
				   [[PAPI_library_init(PAPI_VER_CURRENT);]])], [], 
				   [AC_MSG_ERROR(['Error compiling and running program with papi.  See config.log for details.'])]



#    AC_CHECK_LIB(papi, PAPI_accum, , [AC_MSG_ERROR(['papi library not found.  Did you specify --with-papi=?'])])
#    AC_CHECK_LIB(perfctr, perfctr_info, , [AC_MSG_ERROR(['perfctr library not found.  Did you specify --with-papi=?'])])
fi

AC_ARG_ENABLE(checkpointing, [--enable-checkpointing - enable checkpointing],, enable_checkpointing=no)
AC_ARG_WITH(ckpt-dir, [--with-ckpt-dir=path - (checkpointing) specify path to ckpt directory],, with_ckpt_dir=no)
AC_ARG_WITH(cli-dir, [--with-cli-dir=path - (checkpointing) specify path to cli directory],, with_cli_dir=no)

if test "$enable_checkpointing" != "no" ; then
    if test "$with_ckpt_dir" != "no" ; then
        CPPFLAGS="$CPPFLAGS -I${with_ckpt_dir}"
        LDFLAGS="$LDFLAGS -L${with_ckpt_dir} -Wl,-rpath,${with_ckpt_dir}"
    fi
    if test "$with_cli_dir" != "no" ; then
        CPPFLAGS="$CPPFLAGS -I${with_cli_dir}"
        LDFLAGS="$LDFLAGS -L${with_cli_dir}"
    fi
    AC_CHECK_HEADER([cli.h], , [AC_MSG_ERROR(['cli.h not found.  Did you specify --with-cli-dir=?'])])
    AC_CHECK_LIB(cli, cli_init, , [AC_MSG_ERROR(['cli library not found.  Did you specify --with-cli-dir=?'])], -lckpt)

    AC_CHECK_HEADER([ckpt.h], , [AC_MSG_ERROR(['ckpt.h not found.  Did you specify --with-ckpt-dir=?'])])
    AC_CHECK_LIB(ckpt, ckpt_init, , [AC_MSG_ERROR(['ckpt library not found.  Did you specify --with-ckpt-dir=?'])])
    AC_DEFINE(ENABLED_CHECKPOINTING, 1, [Define to enable nemesis checkpointing])
fi

PAC_PROG_MAKE

AC_C_INLINE

dnl AC_CHECK_HEADER(net/if.h) fails on Solaris; extra header files needed
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
#include <net/if.h>
],,lac_cv_header_net_if_h=yes,lac_cv_header_net_if_h=no)

echo "checking for net/if.h... $lac_cv_header_net_if_h"

if test "$lac_cv_header_net_if_h" = "yes" ; then
    AC_DEFINE(HAVE_NET_IF_H, 1, [Define if you have the <net/if.h> header file.])
fi

AC_CHECK_HEADERS(				\
	assert.h				\
	netdb.h					\
	sys/ioctl.h				\
	sys/socket.h				\
	sys/sockio.h				\
	sys/types.h				\
	errno.h)

# netinet/in.h often requires sys/types.h first.  With AC 2.57, check_headers
# does the right thing, which is to test whether the header is found 
# by the compiler, but this can cause problems when the header needs 
# other headers.  2.57 changes the syntax (!) of check_headers to allow 
# additional headers.
AC_CACHE_CHECK([for netinet/in.h],ac_cv_header_netinet_in_h,[
AC_TRY_COMPILE([#ifdef HAVE_SYS_TYPES_H
#include <sys/types.h>
#endif
#include <netinet/in.h>],[int a=0;],
    ac_cv_header_netinet_in_h=yes,
    ac_cv_header_netinet_in_h=no)])
if test "$ac_cv_header_netinet_in_h" = yes ; then
    AC_DEFINE(HAVE_NETINET_IN_H,1,[Define if netinet/in.h exists])
fi

AC_SUBST(device_name)
AC_SUBST(channel_name)
AC_SUBST(nemesis_network)

AC_SUBST(AS, [as])
AC_SUBST(AR)
AC_SUBST(RANLIB)
AC_SUBST(MPILIBNAME)
AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
PAC_CC_SUBDIR_SHLIBS
AC_SUBST(master_top_srcdir)
AC_SUBST(master_top_builddir)
dnl
dnl Dependency handling
AC_SUBST(MAKE_DEPEND_C)

AC_OUTPUT(Makefile src/Makefile nemesis/Makefile nemesis/src/Makefile nemesis/utils/Makefile nemesis/utils/monitor/Makefile nemesis/net_mod/Makefile nemesis/net_mod/gm_module/Makefile nemesis/net_mod/tcp_module/Makefile nemesis/net_mod/none_module/Makefile localdefs)
