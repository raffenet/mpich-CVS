AC_PREREQ(2.59)
AC_INIT(configure.in)

dnl
dnl Set the directory that contains support scripts such as install-sh and
dnl config.guess
dnl
AC_CONFIG_AUX_DIR(../../../../../confdb)

dnl
dnl Definitions will be placed in this file rather than in the DEFS variable
dnl
AC_CONFIG_HEADER(include/mpidi_ch3i_dllchan_conf.h)
AH_TOP([/* -*- Mode: C; c-basic-offset:4 ; -*- */
/*  
 *  (C) 2001 by Argonne National Laboratory.
 *      See COPYRIGHT in top-level directory.
 */
#ifndef MPIDI_CH3I_DLLCHAN_CONF_H_INCLUDED
#define MPIDI_CH3I_DLLCHAN_CONF_H_INCLUDED
])
AH_BOTTOM([#endif])

echo "RUNNING CONFIGURE FOR THE DLL CHANNEL"

save_libs=$LIBS
LIBS=

dnl
dnl First check that we have a clean build if we are doing a VPATH build
PAC_VPATH_CHECK()

PAC_LOAD_BASE_CACHE

PAC_PROG_MAKE

AC_CHECK_HEADERS(assert.h)

LIBS=$save_libs

MPICH_DEFAULT_CH3_CHANNEL=\"sock\"

AC_DEFINE_UNQUOTED(MPICH_DEFAULT_CH3_CHANNEL,$MPICH_DEFAULT_CH3_CHANNEL,[Define the name of the channel to use if none is selected])

AC_SUBST(device_name)
AC_SUBST(channel_name)
AC_SUBST(AR)
AC_SUBST(RANLIB)
AC_SUBST(MPILIBNAME)
AC_SUBST(CC)
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
PAC_CC_SUBDIR_SHLIBS
AC_SUBST(master_top_srcdir)
AC_SUBST(master_top_builddir)
dnl
dnl Dependency handling
AC_SUBST(MAKE_DEPEND_C)

dnl
dnl Etags
AC_SUBST(ETAGS)
AC_SUBST(ETAGSADD)
export ETAGS
export ETAGSADD


PAC_UPDATE_BASE_CACHE

# -------------------------------------------------------------------------
# FIXME: This isn't clean enough yet
# We need to build the DLL for the selected channels.
export channel_name
export channel_args
AC_SUBST(device_name)
AC_SUBST(channel_name)

subchannel_name=sock

if test ! -d $srcdir/../${subchannel_name} ; then
    AC_MSG_ERROR([Channel ${subchannel_name} is unknown])
elif test ! -x $srcdir/../${subchannel_name}/configure ; then
    AC_MSG_ERROR([Channel ${subchannel_name} has no configure])
fi
if test -s $srcdir/../$subchannel_name/setup_$subchannel_name ; then
    # Typically, this will set ch3subsystems.  For now,
    # we use this configure to create the configuration file
    # for those subsystems.  Eventually, they may have their	
    # own configure
    . $srcdir/../$subchannel_name/setup_$subchannel_name
    if test "$needs_sock" = yes ; then
        AC_DEFINE(HAVE_UTIL_SOCK,1,[Define if the channel needs util/sock])
	CPPFLAGS="${CPPFLAGS} -I${master_top_srcdir}/src/mpid/ch3/util/sock"
    fi				   	
    if test "$needs_shm" = yes ; then
        AC_DEFINE(HAVE_UTIL_SHM,1,[Define if the channel needs util/shm])
	#CPPFLAGS="${CPPFLAGS} -I${master_top_srcdir}/src/mpid/ch3/util/shm"
    fi				   	
fi
dnl AC_SUBST(ch3subsystems)
# -------------------------------------------------------------------------
AC_CONFIG_SUBDIRS(../${subchannel_name})

# Add the MPICH2 include flags to CPPFLAGS.  See the discussion above about
# which include flags should start in MPICH2_INCLUDE_FLAGS and which in 
# CPPFLAGS
CPPFLAGS="$CPPFLAGS $MPICH2_INCLUDE_FLAGS"

AC_OUTPUT(Makefile src/Makefile localdefs)
