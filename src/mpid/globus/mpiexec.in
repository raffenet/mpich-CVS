#!@SHELL@

usage()
{
    echo "usage: $0 [-dumprsl] [-n <nprocs>] <pgm> [args...]"
    exit $1
}

quote()
{
    IFS=""
    params="$*"
    params="'`echo "$params" | sed -e "s/'/'"'"'"'"'"'"'/g"`'";
    echo $params
}

globus_args_quote()
{
    IFS=""
    params="$*"
    params='"'`echo "$params" | sed -e 's/\"/\"\"/g'`'"';
    echo $params
}

dumprsl="no"
nprocs=1
while test $# -gt 0 ; do
    case "$1" in
	-h|--help)
	    usage 0
	    ;;
	-n|-np)
	    nprocs=`echo $2 | sed 's/[^0-9]*//g'`
	    shift 2
	    ;;
	-dumprsl | --dumprsl | -dump-rsl | --dump-rsl | -globusdumprsl | --globusdumprsl | -globus-dumprsl | --globus-dumprsl | \
	    -globus-dump-rsl | --globus-dump-rsl)
	    dumprsl=true
	    shift
	    ;;
	-*)
	    echo 'ERROR: unknown option "'$1'"'
	    usage 1
	    ;;
	*)
	    break
	    ;;
    esac
done

pgm="$1"
shift

if test ! -f "$pgm" ; then
    echo "ERROR: "'"'"$pgm"'"'" not found"
    exit 1
fi

if test ! -x "$pgm" ; then
    echo "ERROR: "'"'"$pgm"'"'" is not executable"
    exit 1
fi

if test -z "$MPIEXEC_GRAM_CONTACT" ; then
    echo "ERROR: the environment variable MPIEXEC_GRAM_CONTACT is not set"
    exit 1
fi

if test -z "$GLOBUS_LOCATION" ; then
    echo "ERROR: the environment variable GLOBUS_LOCATION is not set"
    exit 1
fi

if test ! -d "$GLOBUS_LOCATION" ; then
    echo "ERROR: the environment variable GLOBUS_LOCATION does not point at a valid directory"
    exit 1
fi

if test ! -x "$GLOBUS_LOCATION/bin/globusrun" ; then
    echo "ERROR: GLOBUS_LOCATION/bin/globusrun does not exist"
    exit 1
fi

rsl=.mpich2-globus-rsl.$$
curpath=`pwd`
args=""
extras_line=""
for arg ; do
    args="$args `globus_args_quote "$arg"`"
done
if test -n "$args" ; then
     extras_line="${extras_line}(arguments=$args)"
fi

if test -n "$MPIEXEC_TIMEOUT" ; then
    output=`test "$MPIEXEC_TIMEOUT" -gt 0 2>&1`
    result=$?
    if test -n "$output" ; then
	echo "ERROR: MPIEXEC_TIMEOUT must contain a positive integer"
	exit 1
    fi
    if test $result -ne 0 ; then
	echo "ERROR: MPIEXEC_TIMEOUT must contain a positive integer"
	exit 1
    fi
    maxwalltime=`expr \( $MPIEXEC_TIMEOUT + 59 \) / 60`
    extras_line="${extras_line}(maxwalltime=$maxwalltime)"
fi

if test "@MPIG_VMPI@" = "yes" ; then
    extras_line="${extras_line}(jobtype=mpi)"
fi

env_line=""
if test -n "$MPIG_DEBUG_LEVELS" ; then
    env_line="$env_line (MPIG_DEBUG_LEVELS "'"'"$MPIG_DEBUG_LEVELS"'")'
    file_basename="DEBUG-`basename $pgm`"
    env_line="$env_line (MPIG_DEBUG_FILE_BASENAME "'"'"$file_basename"'")'
    if test -n "$MPIG_DEBUG_TIMED_LEVELS" ; then
	env_line="$env_line (MPIG_DEBUG_TIMED_LEVELS "'"'"$MPIG_DEBUG_TIMED_LEVELS"'")'
    fi
fi

cat >$rsl <<EOF
+
(  &(resourceManagerContact="$MPIEXEC_GRAM_CONTACT")
    (count=$nprocs)
    (label="subjob 0")
    (environment=
	(GLOBUS_DUROC_SUBJOB_INDEX 0)
	(LD_LIBRARY_PATH "$LD_LIBRARY_PATH")
	$env_line
    )
    (directory="$curpath")
    (executable="$pgm")
    $extras_line
)
EOF

if test "$dumprsl" = "no" ; then
    $GLOBUS_LOCATION/bin/globusrun -w -f $rsl
else
    cat $rsl
fi
rm -f $rsl
