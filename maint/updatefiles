#! /bin/sh
#
# Update all of the derived files
# For best performance, execute this in the top-level directory.
# There are some experimental features to allow it to be executed in
# subdirectories
at_top=no
if [ -d maint -a -s maint/simplemake.in ] ; then
    at_top=yes
fi
#
# Get the Autoconf macro files
if [ $at_top = "yes" -a ! -d confdb ] ; then
    # setup to allow CVSROOT instead of an absolute directory path
    if [ -n "$CVSROOT" -a -d "$CVSROOT/fpmpi" ] ; then
        cvs -q checkout confdb
    elif [ -d /home/gropp/cvsMaster_z ] ; then 
        cvs -q -d /home/gropp/cvsMaster_z checkout confdb
    else
        echo "Checkout confdb from /home/gropp/cvsMaster_z" and rerun
	exit 1
    fi
fi
#
if [ $at_top = "no" ] ; then
    echo "Must execute at top level directory for now"
    exit 1
fi
#
# Capture the error messages
if [ -x maint/extracterrmsgs ] ; then
    echo "Extracting the error messages..."
    maint/extracterrmsgs src/mpi/*/*.c src/util/*/*.c > .tmp 2>.err
    # (error here is ok)
    update_errdefs=yes
    if [ -s .err ] ; then 
       cat .err
       rm -f .err2
       grep -v "Warning:" .err > .err2
       if [ -s .err2 ] ; then
           echo "Because of errors in extracting error messages, the file"
           echo "src/mpi/errhan/defmsg.h was not updated."
           update_errdefs=no
       fi
       rm -f .err .err2
    fi
    if [ -s .tmp -a "$update_errdefs" = "yes" ] ; then
        mv .tmp src/mpi/errhan/defmsg.h
    fi
fi
# Build simplemake if necessary
made_simplemake=no
if [ ! -x maint/configure ] ; then
    (cd maint && autoconf )
fi
# The following relies on the Unix find command
if find -name 'maint/configure.in' -newer 'maint/configure' ; then
    (cd maint && autoconf)
fi
if [ ! -x maint/simplemake ] ; then
    (cd maint && ./configure )
    made_simplemake=yes
fi
# The following relies on the Unix find command
if find -name 'maint/simplemake.in' -newer 'maint/simplemake' ; then
    (cd maint && ./configure)
    made_simplemake=yes
fi
#
if [ ! -x maint/simplemake ] ; then
    echo "Could not create simplemake"
    echo "You can copy simplemake.in to simplemake, replacing @PERL@ with the"
    echo "path to Perl (version5).  Make sure the resulting file has"
    echo "execute permissions set."
    exit 1
fi
#
if [ $made_simplemake != "no" ] ; then
    # Check that only the first line was changed:
    rm -f .t1 .t2
    sed -e 1d maint/simplemake.in > .t1
    sed -e 1d maint/simplemake > .t2
    if diff .t1 .t2 >/dev/null 2>&1 ; then
        :
    else
        echo "Something is wrong with simplemake; configure may have"
        echo "replaced variables that it should not have."
        diff .t1 .t2
        exit 1
    fi
    rm -f .t1 .t2
fi
#
# Create the Makefile.in files
# Make sure that these files exist so that the gcc dependency creation
# can work
rm_prepost=no
if [ ! -s src/include/mpidpre.h ] ; then
    rm_prepost=yes
fi
touch src/include/mpidpre.h src/include/mpidpost.h
otherargs="$@"
if [ ! -s src/include/mpi.h ] ; then 
    otherargs="$otherargs -nodepend"
fi
maint/simplemake -common=maint/makedefs \
    -autoconf="-l ROOTDIR/confdb" \
    -libdir='${MPILIBNAME}'=ROOTDIR/lib $otherargs \
    Makefile.sm
#
# Create the configure files and run autoheader
# Eventually, make this a test for find available.  Perhaps
# find . -name configure.in > /dev/null 2>&1
# The problem is that even though cygnus has find, the DOS find
# is identified first.  We probably need a test for this case
find . -name 'configure.in' >/dev/null 2>&1
if [ $? = 0 ] ; then has_unix_find=yes ; else has_unix_find=no ; fi
# if [ $? = 0 ] ; then .. code with find
if [ "$has_unix_find" = "yes" ] ; then
    for dir in `find . -name 'configure.in' -print` ; do
        dir=`dirname $dir`
	if [ -s $dir/Makefile.in ] ; then 
            echo "Found $dir/configure.in"
            (cd $dir ; make -f Makefile.in configure)
        fi
    done
else
    echo "You need to install find (in findutils)"
    exit 1
fi
if [ $rm_prepost = yes ] ; then
    rm -f src/include/mpidpre.h src/include/mpidpost.h
fi
#
if [ -x maint/codingcheck ] ; then
    echo "Running coding check"
    maint/codingcheck src/mpi/*/*.c src/include/*.h src/util/*/*.c
    maint/codingcheck src/mpid/mm/src/*/*.c src/mpid/mm/include/*.h 
    maint/codingcheck src/mpid/ch3/src/*.c
fi
