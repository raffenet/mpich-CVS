- Add tracking of the thread local storage in MPIR_Process so that the
  allocated storage can be properly freed either at thread destruction
  or MPI_Finalize, whichever comes first.  Right now, none of the
  thread local storage in MPIR_Process is freed.

- Fix the collective operation implementations so that nesting counter
  gets decremented even when an error occurs.

- Allow MPID_Thread routines to be used within the device even when
  --enable-threads is not specified.  The implication for the general
  case, where MPID_Thread relies on MPE_Thread, is that MPE_Thread
  will need to be defined when --enable-threads is not specfied.

- Consider the addition of MPE_Thread_join().  If it makes writing
  tests easier, then we should add it.  The following changes should
  have to be made to the MPE_Thread interface.

  o MPE_Thread_create() would require an additional parameter to allow
    the application to decide if the thread can be waited upon
    (joined)

  o MPE_Thread_func_t would now return a 'void *', allowing the
    function to return data

  o For the same reason, MPE_Thread_exit() would need a 'void *'
    parameter

  o void MPE_Thread_join(MPE_Thread_id_t id, void ** data, int * err)
    would need to be added.

- Define a set of error codes for the MPE_Thread and MPID_Thread
  interfaces

- Convert usage of MPICH_THREAD_LEVEL to MPICH_MAX_THREAD_LEVEL as
  described in the documentation (BRT: I learned about the MAX version
  after having smattered the other throughout the code.)
