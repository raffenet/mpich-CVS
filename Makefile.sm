SUBDIRS = . src examples test
DOC_SUBDIRS = doc
# The all-local target makes sure that when different subsystems are selected
# for the configure step, the libraries are removed and the object files 
# cleaned out.  Without this step, it is possible to run make and encounter
# errors caused by out-of-date objects in the directories and in the 
# library
all-local:
	if [ ! -d lib ] ; then mkdir lib ; \
	else \
	    echo "@subsystems@" > lib/pkglist.new ; \
	    if diff lib/pkglist lib/pkglist.new >/dev/null 2>&1 ; then \
	        rm -f lib/pkglist.new ; \
            else \
	        rm -f lib/lib${MPILIBNAME}.a lib/libp${MPILIBNAME}.a ; \
		rm -f lib/pkglist ; \
	        mv -f lib/pkglist.new lib/pkglist ; \
		${MAKE} clean ; \
	    fi ; \
	fi
all-preamble:
	@echo "Beginning make"
# Add any final extras
all-postamble:
	if [ "@BUILD_TVDLL@" = "yes" ] ; then \
	( cd src/mpi/debugger && $(MAKE) ./libtvmpich.so ) ; fi
	@echo "Make completed"

distclean-local:
	-@rm -f lib/lib${MPILIBNAME}.a lib/pkglist lib/pkglist.new
	-@rm -f src/include/${MPILIBNAME}conf.h
	-@rm -f src/include/mpio.h
	-@rm -f bin/mpicc

# Build a distribution tarfile
#  Extract into a temporary directory
#  Rename the directory
#  Run updatefiles with distribution options
#  Tar it up
PACKAGE = mpich2
# Version < 1 is pre MPI-1 release.
# Version >= 2 contains MPI-2
# Version between 1 and 2 contains all of MPI1 and parts of MPI-2
VERSION = 0.94-CVS
MPICVSHOME = @MPICVSHOME@
dist:
	export version=${VERSION} ; \
	prever=`echo ${VERSION} | sed -e 's/^[^-]*//'` ; \
	if test "$$prever" = "-CVS" ; then version=$${version}-`date "+%Y%m%d"` ; fi ; \
	echo "Cutting version $${version} of the MPICH2 distribution" ; \
	if [ ! -d tmpdir ] ; then mkdir tmpdir ; fi ; \
	if [ -n "${TAG}" ] ; then \
	    ( cd tmpdir && cvs -d $(MPICVSHOME) export -r ${TAG} mpich2all ) ;\
	else \
	    ( cd tmpdir && cvs -d $(MPICVSHOME) export -D 'now' mpich2all ) ;\
	fi ; \
	( cd tmpdir/mpich2 && sed -e "s/VERSION =.*/VERSION = $${version}/" Makefile.sm >.tmp && mv .tmp Makefile.sm ) ; \
	mv tmpdir/mpich2 tmpdir/${PACKAGE}-$${version} ; \
	( cd tmpdir/${PACKAGE}-$${version} && maint/updatefiles --with-codecheck=-distcheck ) ; \
	cp -r tmpdir/${PACKAGE}-$${version} tmpdir2 ; \
	( cd tmpdir2 && ./configure && ${MAKE} mandoc && ${MAKE} htmldoc && ${MAKE} latexdoc ) ; \
	cp -r tmpdir2/man tmpdir/${PACKAGE}-$${version}/man ; \
	cp -r tmpdir2/www tmpdir/${PACKAGE}-$${version}/www ; \
	cp -r tmpdir2/doc/refman tmpdir/${PACKAGE}-$${version}/doc ; \
	rm -rf tmpdir2 ; \
	( cd tmpdir/${PACKAGE}-$${version} && maint/updatefiles -distrib --without-codecheck ) ; \
	( cd tmpdir/${PACKAGE}-$${version}/doc && /bin/rm -rf notes ) ; \
	( cd tmpdir/${PACKAGE}-$${version}/doc/adi3 && ${MAKE} && ${MAKE} clean ) ; \
	( cd tmpdir/${PACKAGE}-$${version}/doc/mpich2 && ${MAKE} && ${MAKE} clean ) ; \
	( cd tmpdir && tar cf ${PACKAGE}-$${version}.tar ${PACKAGE}-$${version} ) ; \
	mv tmpdir/${PACKAGE}-$${version}.tar . ; \
	rm -rf tmpdir

# Set the document sources and types (empty lists still cause recursion)
doc_HTML_SOURCES  =
doc_MAN_SOURCES   = 
doc_LATEX_SOURCES = 

# Testing requires installation first
testing:
	(cd test && $(MAKE) testing)

install_LIB = lib/lib${MPILIBNAME}.a
install_INCLUDE = src/include/mpi.h
optinstall_LIB = lib/libp${MPILIBNAME}.a
optinstall_SHLIB = lib/lib${MPILIBNAME}.so
optinstall_INCLUDE = src/mpi/romio/include/mpiof.h src/mpi/romio/include/mpio.h

# Some of the subsidiary packages may need to be installed.  This target will
# invoke their install targets as part of the installation process
INSTALL_SUBDIRS = src/env src/pm/@pm_name@ @bindings_dirs@

install-local:
	-if [ "@BUILD_TVDLL@" = "yes" ] ; then \
	    $(INSTALL_DATA) src/mpi/debugger/libtvmpich.so \
			${libdir}/libtvmpich.so ; fi

#install_DOC = 
#install_HTML = 
#install_MAN = 
#install_BIN = 
#install_SBIN = 	
