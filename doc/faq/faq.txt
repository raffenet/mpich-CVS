%
% Instructions on writing an FAQ entry:
% All entries begin with a set of structured comments that begin
% with two percent signs (%%) and have the form
%    %% Heading: title
%    %% Filename: shortname
%    %% End
% The '%%' must be at the beginning of the line.
% If the heading requires more than one line of text, use the backslash
% character to continue it (and no %% on the continuation lines).
% However, it is best if headings are short, as their purpose in an
% FAQ is to provide a quick index of the topics.
% In addition, the item
%    %% Section: title
% may be used to group the items into major categories.  This statement 
% should immediately preceed the "Heading" statement for the first item
% in that category.
%
% After that comes text.  It may use a subset of LaTeX commands, including
% \texttt, \emph, \textbf, \url, \_, and the environments verbatim, itemize,
% enumerate, and small (there are some others, but these should normally
% be sufficient).  One difference from basic LaTeX is that paragraph
% breaks must be made explicitly with \par.
%
% To rebuild the faq files in all three (HTML, PDF, Text) formats, do
%    make
% To install the HTML and PDF pages on the web site, do
%    make install-web
% ----------------------------------------------------------------------------
%% Section: General Information
%% Heading: Q: What is MPICH2?
%% Filename: intro
%% End
MPICH2 is a freely available, portable implementation of
\href{http://www.mpi-forum.org}{MPI}, the Standard for 
message-passing libraries.  It implements both MPI-1 and MPI-2.

%% Section: Compiling MPI Programs
%% Heading: C++ and \texttt{SEEK\_SET}
%% Filename: cxxseek
%% End
Some users may get error messages such as
\begin{verbatim}
    SEEK_SET is #defined but must not be for the C++ binding of MPI
\end{verbatim}
The problem is that both \texttt{stdio.h} and the MPI C++ interface use
\texttt{SEEK\_SET}, \texttt{SEEK\_CUR}, and \texttt{SEEK\_END}.  This is really a
bug in the MPI-2 standard.  You can try adding 
\begin{verbatim}
    #undef SEEK_SET
    #undef SEEK_END
    #undef SEEK_CUR
\end{verbatim}
before \texttt{mpi.h} is included, or add the definition
\begin{verbatim}
    -DMPICH_IGNORE_CXX_SEEK
\end{verbatim}
to the command line (this will cause the MPI versions of \texttt{SEEK\_SET}
etc. to be skipped).


%% Heading: When building the ssm or sshm channel, I get the \
error "mpidu\_process\_locks.h:234:2: error: \#error *** No atomic memory \
operation specified to implement busy locks ***"
%% Filename: asmlocks
%% End
The ssm and sshm channels do not work on all platforms because they
use special interprocess locks (often assembly) that may not work
with some compilers or machine architectures. They work on Linux with
gcc, Intel, and Pathscale compilers on various Intel
architectures. They also work in Windows and Solaris environments.



%% Section: Running MPI Programs
%% Heading: Q: How do I pass environment variables to the processes of my parallel program
%% Filename: envvars
%% End
A: The specific method depends on the process manager and version of 
\texttt{mpiexec} that you are using. 

%% Heading: Q:  How do I pass environment variables to the processes of \
my parallel program when using the mpd process manager?
%% Filename: envvarsmpd
%% End
A:  By default, all the environment variables in the shell where
\texttt{mpiexec} is run are passed to all processes of the application
program.  (The one exception is \texttt{LD\_LIBRARY\_PATH} when the
mpd's are being run as root.)  This default can be overridden in many
ways, and individual environment variables can be passed to specific
processes using arguments to \texttt{mpiexec}.  A synopsis of the
possible arguments can be listed by typing
\begin{verbatim}
    mpiexec -help
\end{verbatim}
and further details are available in the 
\href{http://www-unix.mcs.anl.gov/mpi/mpich2/downloads/mpich2-doc-user.pdf}{Users Guide}.
